use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use com.basiscomponents.bc.SqlQueryBC
use java.sql.Types

enter empl$,err=*next; called=1

declare auto BBjTopLevelWindow wnd!
declare auto BBjListButton lb_db!
declare auto BBjListButton lb_tbl!
declare auto BBjToolButton btn_fit!
declare BBjGridExWidget grid!
declare SqlQueryBC sbc!

sg! = BBjAPI().openSysGui("X0")
wnd! = sg!.addWindow(10,10,800,600,"Employee Search")

grid! = new BBjGridExWidget(wnd!,100,0,0,800,600)

wnd!        .setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!        .setCallback(BBjAPI.ON_RESIZE,"resize")

if called then
    grid!.setCallback(grid!.ON_GRID_DOUBLE_CLICK(),"onRowDoubleclick")
    grid!.setSelectionMode(grid!.GRID_SELECT_ROW())
fi

grid!.setMultipleSelection(0)
grid!.setShowSelectionCheckbox(0)
grid!.setEnableFilter(1)

rem Enterprise Features
lic!=System.getProperty("bbjgridexwidget.license")
if lic! <> null()  then
    BBjGridExWidget.setLicenseKey(lic!)
    grid!.setEnableRowGroup(1)
    grid!.setRowGroupPanelShow(grid!.GRID_GROUPPANEL_SHOW_VISIBLE())
fi

gosub fillGrid


process_events

   
fillGrid:
    sbc! = new SqlQueryBC(BBjAPI().getJDBCConnection("ACME"))
    rs! = sbc!.retrieve("SELECT  * FROM EMPLOYEE")
    grid!.setData(rs!)
return


byebye:
    bye

    
resize:
    ev! = BBjAPI().getLastEvent()
    grid!.setSize(ev!.getWidth(),ev!.getHeight())
return


onRowDoubleclick:
    ev! = BBjAPI().getLastEvent()
    ev! = ev!.getObject()
    row! = ev!.getRow()
    empl$ = row!.getData().get("EMPL_ID").getAsString()
    
    wnd!.destroy()
    
exit


    

